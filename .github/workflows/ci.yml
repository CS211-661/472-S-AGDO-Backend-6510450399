name: CI

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - 'main'
      - 'develop'

jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22' # อัพเดทเป็น Go 1.22 ตามที่ระบุใน go.mod

      - name: Run Unit Tests
        run: go test -v ./tests/...

  build-and-release:
    needs: unittest
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.22' # อัพเดทเป็น Go 1.22 ตามที่ระบุใน go.mod

      - name: Generate Tag
        id: tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          MAJOR=$(echo $LAST_TAG | cut -d. -f1 | sed 's/v//')
          MINOR=$(echo $LAST_TAG | cut -d. -f2)
          PATCH=$(echo $LAST_TAG | cut -d. -f3)
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$NEW_PATCH"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "Generated new tag: $NEW_TAG"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: Release ${{ steps.tag.outputs.new_tag }}
          draft: false
          prerelease: false

      - name: Build Docker Image
        run: |
          docker build -f docker/prod.Dockerfile -t aeuro7/agdo_test:latest -t aeuro7/agdo_test:${{ steps.tag.outputs.new_tag }} .

      - name: Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push aeuro7/agdo_test:latest
          docker push aeuro7/agdo_test:${{ steps.tag.outputs.new_tag }}
